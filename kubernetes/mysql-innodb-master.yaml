apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-primary
  namespace: rook-mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql-service
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      nodeSelector:
        mysql: master
      initContainers:
      - name: init-mysql
        image: mysql:8.0
        env: 
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        args:
          - "--ignore-db-dir=lost+found"
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Generate mysql server-id from pod ordinal index.
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          mkdir -p /mnt/mysql/conf.d
          echo [mysqld] > /mnt/mysql/conf.d/server-id.cnf
          # Add an offset to avoid reserved server-id=0 value.
          echo server-id=$((1000 + ${BASH_REMATCH[1]})) >> /mnt/mysql/conf.d/server-id.cnf
          echo report_host=$(POD_IP) >> /mnt/mysql/conf.d/server-id.cnf
          cp /mnt/config-map/my.cnf /mnt/mysql
          # rm -rf /var/lib/mysql
          # mysqld --initialize
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /mnt/mysql
        - name: config-map
          mountPath: /mnt/config-map
      containers:
        - name: mysql
          image: mysql:8.0
          env: 
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-account-password
                key: mysql-root-password
          ports:
          - name: mysql
            containerPort: 3306
          volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
            subPath: mysql
          - name: conf
            mountPath: /etc/mysql
          resources:
            requests:
              cpu: 500m
              memory: 1Gi 
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              # Check we can execute queries over TCP (skip-networking is off).
              command: ["mysql", "-h", "127.0.0.1", "-ureadiness", "-preadiness", "-e", "SELECT 1"]
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
        - name: xtrabackup
          image: percona/percona-xtrabackup:8.0
          ports:
            - containerPort: 3307
          env: 
            - name: BACKUP_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: mysql-account-password
                  key: backuper-account
            - name: BACKUP_ACCOUNT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-account-password
                  key: backuper-password
            - name: ADMIN_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: mysql-account-password
                  key: admin-account
            - name: ADMIN_ACCOUNT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-account-password
                  key: admin-password
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command:
          - bash
          - "-c"
          - |
            cd /var/lib/mysql
            ls -l /var/lib/mysql
            echo "Waiting for mysqld to be ready (accepting connections)"
            until mysql -h 127.0.0.1 -ureadiness -preadiness -e "SELECT 1"; do sleep 1; done

            [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
            yes | mysqlsh --uri $(ADMIN_ACCOUNT):$(ADMIN_ACCOUNT_PASSWORD)@$(POD_IP):3306 -- dba drop-metadata-schema
            yes | mysqlsh --uri $(ADMIN_ACCOUNT):$(ADMIN_ACCOUNT_PASSWORD)@$(POD_IP):3306 -- dba create-cluster "mysql_cluster" --ipWhitelist=$(POD_IP)/8
            exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \
            "xtrabackup --backup --stream=xbstream --host=127.0.0.1 --user=$(BACKUP_ACCOUNT) --password=$(BACKUP_ACCOUNT_PASSWORD)"
          volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
          - name: conf
            mountPath: /etc/mysql
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-dynamic-pvc
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql
      imagePullSecrets:
        - name: image-repo-secret
