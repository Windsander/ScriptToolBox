apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ingress-jupyterhub-com-secret
  namespace: kube-jupyterhub
spec:
  secretName: ingress-jupyterhub-com-tls
  duration: 2160h
  renewBefore: 360h
  subject:
    organizations:
    - CyberFederal Inc.
  isCA: true
  dnsNames:
  - www.cyberunion.base1.grafana
  - www.cyberunion.base1.prometheus
  - www.cyberunion.base1.alertmanager
  issuerRef:
    name: local-ca-clusterissuer
    kind: ClusterIssuer
    group: cert-manager.io
---
#
# This example is for Kubernetes running an ngnix-ingress
# and an ACME (e.g. Let's Encrypt) certificate service
#
# The nginx-ingress annotations support the dashboard
# running using HTTPS with a self-signed certificate
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-jupyterhub-dashboard
  namespace: kube-jupyterhub
  annotations:
    kubernetes.io/ingress.class: "nginx"
#    kubernetes.io/tls-acme: "true"
#    cert-manager.io/issuer: "ingress-monitoring-encrypt"
#    nginx.ingress.kubernetes.io/rewrite-target: /$2
#    nginx.ingress.kubernetes.io/auth-type: "basic"
#    nginx.ingress.kubernetes.io/auth-secret: "basic-auth"
#    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
#    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#    nginx.ingress.kubernetes.io/server-snippet: |
#      proxy_ssl_verify off;
spec:
  tls:
    - hosts:
        - www.cyberfederal.base1.jupyterhub
      secretName: ingress-jupyterhub-com-tls
  rules:
    - host: www.cyberfederal.base1.jupyterhub
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proxy-public
                port:
                  #number: 80 
                  name: http
