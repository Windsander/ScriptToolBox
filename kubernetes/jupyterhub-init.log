Release "kube-jupyterhub" has been upgraded. Happy Helming!
NAME: kube-jupyterhub
LAST DEPLOYED: Mon Jan 31 11:06:27 2022
NAMESPACE: kube-jupyterhub
STATUS: deployed
REVISION: 3
TEST SUITE: None
NOTES:
.      __                             __                   __  __            __
      / /  __  __    ____    __  __  / /_  ___    _____   / / / /  __  __   / /_
 __  / /  / / / /   / __ \  / / / / / __/ / _ \  / ___/  / /_/ /  / / / /  / __ \
/ /_/ /  / /_/ /   / /_/ / / /_/ / / /_  /  __/ / /     / __  /  / /_/ /  / /_/ /
\____/   \__,_/   / .___/  \__, /  \__/  \___/ /_/     /_/ /_/   \__,_/  /_.___/
                 /_/      /____/

       You have successfully installed the official JupyterHub Helm chart!

### Installation info

  - Kubernetes namespace: kube-jupyterhub
  - Helm release name:    kube-jupyterhub
  - Helm chart version:   0.0.1-set.by.chartpress
  - JupyterHub version:   2.1.1
  - Hub pod packages:     See https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/0.0.1-set.by.chartpress/images/hub/requirements.txt

### Followup links

  - Documentation:  https://z2jh.jupyter.org
  - Help forum:     https://discourse.jupyter.org
  - Social chat:    https://gitter.im/jupyterhub/jupyterhub
  - Issue tracking: https://github.com/jupyterhub/zero-to-jupyterhub-k8s/issues

### Post-installation checklist

  - Verify that created Pods enter a Running state:

      kubectl --namespace=kube-jupyterhub get pod

    If a pod is stuck with a Pending or ContainerCreating status, diagnose with:

      kubectl --namespace=kube-jupyterhub describe pod <name of pod>

    If a pod keeps restarting, diagnose with:

      kubectl --namespace=kube-jupyterhub logs --previous <name of pod>

  - Verify an external IP is provided for the k8s Service proxy-public.

      kubectl --namespace=kube-jupyterhub get service proxy-public

    If the external ip remains <pending>, diagnose with:

      kubectl --namespace=kube-jupyterhub describe service proxy-public

  - Verify web based access:

    You have not configured a k8s Ingress resource so you need to access the k8s
    Service proxy-public directly.

    If your computer is outside the k8s cluster, you can port-forward traffic to
    the k8s Service proxy-public with kubectl to access it from your
    computer.

      kubectl --namespace=kube-jupyterhub port-forward service/proxy-public 8080:http

    Try insecure HTTP access: http://localhost:8080
